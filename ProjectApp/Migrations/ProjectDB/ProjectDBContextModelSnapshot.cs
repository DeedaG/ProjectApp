// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ProjectApp.Migrations.ProjectDB
{
    [DbContext(typeof(ProjectDBContext))]
    partial class ProjectDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("ProjectApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("ProjectApp.Models.ChartData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChartUserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChartUserId");

                    b.ToTable("ChartData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            //ChartUserId = "1"
                        });
                });

            modelBuilder.Entity("ProjectApp.Models.ProjectViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectDataId");

                    b.HasIndex("ProjectUserId");

                    b.ToTable("ProjectViewModel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Info = "test1",
                            Language = "Test1",
                            Name = "Test1",
                            ProjectDataId = 1,
                            //ProjectUserId = "1"
                        },
                        new
                        {
                            Id = 2,
                            Info = "test2",
                            Language = "Test2",
                            Name = "Test2",
                            ProjectDataId = 1,
                            //ProjectUserId = "1"
                        });
                });

            modelBuilder.Entity("ProjectApp.Models.ChartData", b =>
                {
                    b.HasOne("ProjectApp.Models.ApplicationUser", "ChartUser")
                        .WithMany("Charts")
                        .HasForeignKey("ChartUserId");
                });

            modelBuilder.Entity("ProjectApp.Models.ProjectViewModel", b =>
                {
                    b.HasOne("ProjectApp.Models.ChartData", "ProjectData")
                        .WithMany("DataForProjects")
                        .HasForeignKey("ProjectDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectApp.Models.ApplicationUser", "ProjectUser")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
